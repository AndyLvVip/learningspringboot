buildscript {
	ext {
		springBootVersion = '2.1.1.RELEASE'
		springCloudVersion = 'Greenwich.RC1'
	}
	repositories {
		mavenCentral()
		maven {
			url 'http://repo.spring.io/libs-release-local'
		}
		maven {
			url 'http://repo.spring.io/libs-snapshot-local'
		}
		maven {
			url 'http://repo.spring.io/libs-milestone-local'
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}

}

plugins {
	id "com.gorylenko.gradle-git-properties" version "1.4.17"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


group = 'aspire.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
    maven {
        url 'http://repo.spring.io/libs-release-local'
    }
	maven {
		url 'http://repo.spring.io/libs-snapshot-local'
	}
	maven {
		url 'http://repo.spring.io/libs-milestone-local'
	}
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
	implementation('org.springframework.boot:spring-boot-starter-webflux') {
		exclude module: 'spring-boot-starter-reactor-netty'
	}
	implementation('org.springframework.boot:spring-boot-starter-tomcat')
	implementation('org.springframework.cloud:spring-cloud-starter-stream-rabbit')
	implementation('org.springframework.cloud:spring-cloud-stream-reactive')
	implementation('org.springframework.boot:spring-boot-configuration-processor')
	implementation('org.springframework.boot:spring-boot-devtools')
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.projectlombok:lombok')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('io.projectreactor:reactor-test')
	testImplementation('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
	testImplementation('org.seleniumhq.selenium:selenium-chrome-driver')
	testImplementation('org.seleniumhq.selenium:selenium-firefox-driver')
	testImplementation('org.seleniumhq.selenium:selenium-safari-driver')
	testImplementation('org.seleniumhq.selenium:htmlunit-driver')
}

bootJar {
	excludeDevtools = false
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}